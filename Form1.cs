using System.Security.Cryptography;

namespace MalwareBlock {
    public partial class Form1 : Form {
        private bool verbose = false;
        private bool isStopped = true;

        public Form1() {
            InitializeComponent();
        }

        private static string? GetDigest(string path) {
            string? digest;

            using (SHA256 sha256 = SHA256.Create()) {
                using (Stream reader = File.OpenRead(path))
                    digest = sha256.ComputeHash(reader).ToString();
            }

            return digest;
        }

        private void Scan(string path) {
            bool isDir = Directory.Exists(path);

            if (isDir) {
                fileSystemWatcher1.Path = path;
                fileSystemWatcher1.EnableRaisingEvents = true;
            } else {
                string? digest = GetDigest(path);

                if (digest == null)
                    return;

                (string?, string?) result = Database.RetrieveData(digest);

                if (result.Item2 == null) {
                    if (verbose) {
                        MessageBox.Show(
                            "Good news! File is not recognized as a malware",
                            "MalwareBlock - INFO",
                            MessageBoxButtons.OK,
                            MessageBoxIcon.Information
                            );
                    }

                    return;
                }

                string message = "ATTENTION! File is recognized as a malware\n";
                message += $"Name: {result.Item1}\n";
                message += $"SHA256: {result.Item2}\n";
                message += "\nDo you want to remove it?";

                DialogResult answer = MessageBox.Show(
                    message,
                    "MalwareBlock - IMPORTANT",
                    MessageBoxButtons.YesNo,
                    MessageBoxIcon.Exclamation
                    );

                if (answer == DialogResult.Yes)
                    File.Delete(path);
            }
        }

        private void changeBtn_Click(object sender, EventArgs e) {
            if (currentLabel.Text == "Current: Folder") {
                currentLabel.Text = "Current: File";
                verbose = true;
            } else {
                currentLabel.Text = "Current: Folder";
                verbose = false;
            }
        }

        private void selectBtn_Click(object sender, EventArgs e) {
            if (currentLabel.Text.Contains("Folder")) {
                if (folderBrowserDialog1.ShowDialog() == DialogResult.OK) {
                    string path = folderBrowserDialog1.SelectedPath;

                    try {
                        pathTBox.Text = path;
                    } catch {
                        MessageBox.Show(
                            "Error selecting folder: " + path,
                            "MalwareBlock - ERROR",
                            MessageBoxButtons.OK,
                            MessageBoxIcon.Error
                            );
                    }
                }
            } else {
                if (openFileDialog1.ShowDialog() == DialogResult.OK) {
                    string filename = openFileDialog1.FileName;

                    try {
                        pathTBox.Text = filename;
                    } catch {
                        MessageBox.Show(
                            "Error selecting file: " + filename,
                            "MalwareBlock - ERROR",
                            MessageBoxButtons.OK,
                            MessageBoxIcon.Error
                            );
                    }
                }
            }
        }

        private void startBtn_Click(object sender, EventArgs e) {
            isStopped = false;
            Scan(pathTBox.Text.Trim());
        }

        private void stopBtn_Click(object sender, EventArgs e) {
            fileSystemWatcher1.EnableRaisingEvents = false;
            isStopped = true;
        }

        private void openToolStripMenuItem_Click(object sender, EventArgs e) {
            notifyIcon1.Visible = false;
            this.ShowInTaskbar = true;
            this.WindowState = FormWindowState.Normal;
        }

        private void exitToolStripMenuItem_Click(object sender, EventArgs e) {
            if (!isStopped)
                stopBtn_Click(sender, e);

            Application.Exit();
        }

        private void notifyIcon1_MouseDoubleClick(object sender, MouseEventArgs e) {
            openToolStripMenuItem_Click(sender, e);
        }

        private void Form1_Resize(object sender, EventArgs e) {
            if (this.WindowState == FormWindowState.Minimized) {
                notifyIcon1.Visible = true;
                this.ShowInTaskbar = false;
            }
        }

        private void fileSystemWatcher1_Created(object sender, FileSystemEventArgs e) {
            Scan(e.FullPath);
        }
    }
}